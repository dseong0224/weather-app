{"ast":null,"code":"var _jsxFileName = \"/home/dev/lfz/weather-nounce/weathernounce/src/App.js\";\nimport React from 'react';\nimport Titles from \"./components/titles\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\nconst API_KEY = \"e8f6eab7471569cd06cd19b6927898f9\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      huminity: undefined,\n      description: undefined,\n      error: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value; //e.target.elements refers to input field\n\n      const country = e.target.elements.country.value;\n      const apiCall = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&APPID=\").concat(API_KEY, \"&units=metric\"));\n      const data = await apiCall.json();\n\n      if (city && country) {\n        console.log(\"data: \", data);\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      } else {\n        console.log(\"data: \", data);\n        this.setState({\n          temperature: undefined,\n          city: undefined,\n          country: undefined,\n          huminity: undefined,\n          description: undefined,\n          error: undefined\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Titles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temperature: this.state.temperature,\n      city: this.state.city,\n      country: this.state.country,\n      humidity: this.state.humidity,\n      description: this.state.description,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dev/lfz/weather-nounce/weathernounce/src/App.js"],"names":["React","Titles","Form","Weather","API_KEY","App","Component","state","temperature","undefined","city","country","huminity","description","error","getWeather","e","preventDefault","target","elements","value","apiCall","fetch","data","json","console","log","setState","main","temp","name","sys","humidity","weather","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,WAAW,EAAEC,SADP;AAENC,MAAAA,IAAI,EAAED,SAFA;AAGNE,MAAAA,OAAO,EAAEF,SAHH;AAING,MAAAA,QAAQ,EAAEH,SAJJ;AAKNI,MAAAA,WAAW,EAAEJ,SALP;AAMNK,MAAAA,KAAK,EAAEL;AAND,KADwB;;AAAA,SAShCM,UATgC,GASnB,MAAOC,CAAP,IAAa;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMP,IAAI,GAAGM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAApC,CAFwB,CAEmB;;AAC3C,YAAMT,OAAO,GAAGK,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBR,OAAlB,CAA0BS,KAA1C;AACA,YAAMC,OAAO,GAAG,MAAMC,KAAK,4DAAqDZ,IAArD,cAA6DC,OAA7D,oBAA8EP,OAA9E,mBAA3B;AACA,YAAMmB,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;;AACA,UAAGd,IAAI,IAAIC,OAAX,EAAmB;AACjBc,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,IAAtB;AACA,aAAKI,QAAL,CAAc;AACZnB,UAAAA,WAAW,EAAEe,IAAI,CAACK,IAAL,CAAUC,IADX;AAEZnB,UAAAA,IAAI,EAAEa,IAAI,CAACO,IAFC;AAGZnB,UAAAA,OAAO,EAAEY,IAAI,CAACQ,GAAL,CAASpB,OAHN;AAIZqB,UAAAA,QAAQ,EAAET,IAAI,CAACK,IAAL,CAAUI,QAJR;AAKZnB,UAAAA,WAAW,EAAEU,IAAI,CAACU,OAAL,CAAa,CAAb,EAAgBpB,WALjB;AAMZC,UAAAA,KAAK,EAAE;AANK,SAAd;AAQD,OAVD,MAUO;AACLW,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,IAAtB;AACA,aAAKI,QAAL,CAAc;AACZnB,UAAAA,WAAW,EAAEC,SADD;AAEZC,UAAAA,IAAI,EAAED,SAFM;AAGZE,UAAAA,OAAO,EAAEF,SAHG;AAIZG,UAAAA,QAAQ,EAAEH,SAJE;AAKZI,UAAAA,WAAW,EAAEJ,SALD;AAMZK,UAAAA,KAAK,EAAEL;AANK,SAAd;AAQD;AACF,KApC+B;AAAA;;AAqChCyB,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKnB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,OAAD;AACE,MAAA,WAAW,EAAE,KAAKR,KAAL,CAAWC,WAD1B;AAEE,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,IAFnB;AAGE,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,OAHtB;AAIE,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWyB,QAJvB;AAKE,MAAA,WAAW,EAAE,KAAKzB,KAAL,CAAWM,WAL1B;AAME,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,KANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAcD;;AApD+B;;AAuDlC,eAAeT,GAAf","sourcesContent":["import React from 'react';\n\nimport Titles from \"./components/titles\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\n\nconst API_KEY = \"e8f6eab7471569cd06cd19b6927898f9\"\n\nclass App extends React.Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    huminity: undefined,\n    description: undefined,\n    error: undefined\n  }\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value; //e.target.elements refers to input field\n    const country = e.target.elements.country.value;\n    const apiCall = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${API_KEY}&units=metric`);\n    const data = await apiCall.json();\n    if(city && country){\n      console.log(\"data: \", data);\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        error: \"\"\n      })\n    } else {\n      console.log(\"data: \", data);\n      this.setState({\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        huminity: undefined,\n        description: undefined,\n        error: undefined\n      })\n    }\n  }\n  render(){\n    return (\n      <div>\n        <Titles/>\n        <Form getWeather={this.getWeather}/>\n        <Weather \n          temperature={this.state.temperature}\n          city={this.state.city}\n          country={this.state.country}\n          humidity={this.state.humidity}\n          description={this.state.description}\n          error={this.state.error}\n          />\n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}